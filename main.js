(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var n,r;return n=t,(r=[{key:"_getJsonOrError",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._getJsonOrError)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._getJsonOrError)}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._getJsonOrError)}},{key:"changeProfile",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._getJsonOrError)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._getJsonOrError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e._id),{method:"DELETE",headers:this._headers}).then(this._getJsonOrError)}},{key:"putLikeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e._id,"/likes"),{method:"PUT",headers:this._headers}).then(this._getJsonOrError)}},{key:"deleteLikeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e._id,"/likes"),{method:"DELETE",headers:this._headers}).then(this._getJsonOrError)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r,o){var i=o.userId,a=o.handleDeleteCard,u=o.handleLikeCard,c=o.handleDisLikeCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._id=i,this._ownerId=t.owner._id,this._likes=t.likes,this._cardSelector=n,this._openImage=r,this._handleDeleteCard=a,this._handleLikeCard=u,this._handleDisLikeCard=c}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".element__image"),this._deleteButton=this._element.querySelector(".element__delete"),this._likeButton=this._element.querySelector(".element__like"),this._likeCounter=this._element.querySelector(".element__like-counter"),this._element.querySelector(".element__city").textContent=this._name,this._imageElement.src=this._link,this._imageElement.alt=this._name,this._id!==this._ownerId&&(this._deleteButton.style.display="none",console.log(this._id),console.log(this._ownerId)),this.likesCounter(this._likes),this._activeLike(),this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("element__like_active")?e._handleDisLikeCard():e._handleLikeCard()})),this._deleteButton.addEventListener("click",(function(){e._handleDeleteCard(e)})),this._imageElement.addEventListener("click",(function(){e._openImage(e._name,e._link)}))}},{key:"delete",value:function(){this._element.remove(),this._element=null}},{key:"like",value:function(){this._likeButton.classList.add("element__like_active")}},{key:"disLike",value:function(){this._likeButton.classList.remove("element__like_active")}},{key:"likesCounter",value:function(e){0===e.length?this._likeCounter.textContent="":this._likeCounter.textContent=e.length}},{key:"_activeLike",value:function(){var e=this;this._likes.forEach((function(t){e._id===t._id&&e._likeButton.classList.add("element__like_active")}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._validationConfig=n,this._inputList=Array.from(t.querySelectorAll(this._validationConfig.inputSelector)),this._buttonElement=this._formElement.querySelector(this._validationConfig.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._validationConfig.inputErrorClass),n.textContent=t,n.classList.add(this._validationConfig.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._validationConfig.inputErrorClass),t.textContent="",t.classList.remove(this._validationConfig.errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_validateInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._validateInput()?(this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"disabledButton",value:function(){this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__button-close"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function y(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._name=t._popup.querySelector(".popup__caption"),t._link=t._popup.querySelector(".popup__image-src"),t}return t=a,(n=[{key:"open",value:function(e,t){this._link.src=t,this._link.alt=e,this._name.textContent=e,p(_(a.prototype),"open",this).call(this)}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function E(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e,t){var n,r=t.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitForm=r,n._form=n._popup.querySelector(".popup__form"),n._inputs=n._form.querySelectorAll(".popup__input"),n._submitButton=n._popup.querySelector(".popup__button"),n._submitButtonContent=n._submitButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"setInputValues",value:function(e){this._inputs.forEach((function(t){t.value=e[t.id],console.log(t)}))}},{key:"setEventListeners",value:function(){var e=this;g(C(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._getInputValues())}))}},{key:"renderLoadingView",value:function(e,t){var n=this;e?(this._submitButton.disabled=!0,this._submitButton.textContent=t):setTimeout((function(){n._submitButton.disabled=!0,n._submitButton.textContent=n._submitButtonContent}),3e3)}},{key:"close",value:function(){g(C(a.prototype),"close",this).call(this),this._form.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e,t){var n,r=t.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__form"),n._submitForm=r,n}return t=a,(n=[{key:"open",value:function(e){this._card=e,j(q(a.prototype),"open",this).call(this)}},{key:"setSubmitAction",value:function(e){var t=e.handleSubmitAction;this.submitAction=t}},{key:"setEventListeners",value:function(){var e=this;j(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._card)}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U,V=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t.nameSelector),this._about=document.querySelector(t.aboutSelector),this._avatar=document.querySelector(t.avatarSelector)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){e.name,e.about,e.avatar&&(this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=(document.querySelectorAll(".popup"),document.querySelector(".popup_profile")),A=document.querySelector(".popup_new-card"),D=document.querySelector(".popup_image"),J=document.querySelector(".popup_avatar"),F=document.querySelector(".popup_accept"),N=document.querySelector(".profile__button-edit"),H=document.querySelector(".profile__button-edd"),M=document.querySelector(".profile__avatar"),z=document.querySelector(".elements"),$=document.querySelector(".popup__form"),G=document.querySelector(".popup__form_new-card"),K=document.querySelector(".popup__form_avatar"),Q={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error-visible"};function W(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var X=new t({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-47",headers:{authorization:"57fe7532-adaf-4e02-b40f-30da1bce78cd","Content-Type":"application/json"}}),Y=new V({nameSelector:".profile__user-name",aboutSelector:".profile__user-about",avatarSelector:".profile__avatar-img"}),Z=function(e){var t=new r(e,"#element-template",re,{userId:U,handleDeleteCard:function(){oe.open(e),oe.setSubmitAction({handleSubmitAction:function(){X.deleteCard(e).then((function(){oe.close(),t.delete()})).catch((function(e){return console.log(e)}))}})},handleLikeCard:function(){X.putLikeCard(e).then((function(e){t.likesCounter(e.likes),t.like()})).catch((function(e){console.log("Ошибка: ".concat(e))}))},handleDisLikeCard:function(){X.deleteLikeCard(e).then((function(e){t.likesCounter(e.likes),t.disLike()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}});return t.generateCard()},ee=new u({renderer:function(e){var t=Z(e);ee.addItem(t)}},z),te=new O(A,{submitForm:function(e){te.renderLoadingView(!0,"Сохранение..."),X.addCard(e).then((function(e){ee.addItem(Z(e)),te.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){te.renderLoadingView(!1)}))}}),ne=new b(D),re=function(e,t){ne.open(e,t)},oe=new R(F,{submitForm:function(){return oe.submitAction()}}),ie=new O(x,{submitForm:function(e){ie.renderLoadingView(!0,"Сохранение..."),X.changeProfile(e).then((function(e){Y.setUserInfo(e),ie.close()})).catch((function(e){return console.log(e)})).finally((function(){ie.renderLoadingView(!1)}))}}),ae=new O(J,{submitForm:function(e){ae.renderLoadingView(!0,"Сохранение..."),X.changeAvatar(e).then((function(e){Y.setUserInfo(e),ae.close()})).catch((function(e){return console.log(e)})).finally((function(){ae.renderLoadingView(!1)}))}});Promise.all([X.getUserInfo(),X.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return W(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?W(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];U=o._id,Y.setUserInfo(o),ee.renderItems(i.reverse()),console.log(U)})).catch((function(e){return console.log(e)})),H.addEventListener("click",(function(){te.open(),ce.resetValidation()})),M.addEventListener("click",(function(){ae.open(),se.resetValidation()})),N.addEventListener("click",(function(){var e=Y.getUserInfo();ie.setInputValues(e),ie.open(),ue.resetValidation(),ue.disabledButton()}));var ue=new i($,Q),ce=new i(G,Q),se=new i(K,Q);ue.enableValidation(),ce.enableValidation(),se.enableValidation(),te.setEventListeners(),ne.setEventListeners(),oe.setEventListeners(),ae.setEventListeners(),ie.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Ly4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhBY2NlcHQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcbiAgfVxuXG4gIC8vINCf0YDQuNCy0LDRgtC90YvQuSDQvNC10YLQvtC0INC+0LHRgNCw0LHQvtGC0LrQuCDQvtGC0LLQtdGC0LBcbiAgX2dldEpzb25PckVycm9yKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cbiAgICAvLyDQldGB0LvQuCDQvtGI0LjQsdC60LAsINC+0YLQutC70L7QvdGP0LXQvCDQv9GA0L7QvNC40YFcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICB9XG5cbiAgLy8g0J/QvtC70YPRh9C10L3QuNC1INC00LDQvdC90YvRhSDQv9GA0L7RhNC40LvRjyDRgSDRgdC10YDQstC10YDQsFxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fZ2V0SnNvbk9yRXJyb3IpO1xuICB9XG5cbiAgLy8g0J/QvtC70YPRh9C10L3QuNC1INC60LDRgNGC0L7Rh9C10Log0YEg0YHQtdGA0LLQtdGA0LBcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9nZXRKc29uT3JFcnJvcik7XG4gIH1cblxuICAvLyDQntGC0L/RgNCw0LLQutCwINC90LAg0YHQtdGA0LLQtdGAINC90L7QstC+0Lkg0LrQsNGA0YLQvtGH0LrQuFxuICBhZGRDYXJkKGRhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBsaW5rOiBkYXRhLmxpbmssXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2dldEpzb25PckVycm9yKTtcbiAgfVxuXG4gIC8vINCe0LHQvdC+0LLQu9C10L3QuNC1INC00LDQvdC90YvRhSDQv9GA0L7RhNC40LvRjyDQvdCwINGB0LXRgNCy0LXRgNC1XG4gIGNoYW5nZVByb2ZpbGUoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBhYm91dDogZGF0YS5hYm91dCxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5fZ2V0SnNvbk9yRXJyb3IpO1xuICB9XG5cbiAgLy8g0J7QsdC90L7QstC70LXQvdC40LUg0LDQstCw0YLQsNGA0LAg0L3QsCDRgdC10YDQstC10YDQtVxuICBjaGFuZ2VBdmF0YXIoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2dldEpzb25PckVycm9yKTtcbiAgfVxuXG4gIC8vINCj0LTQsNC70LXQvdC40LUg0LrQsNGA0YLQvtGH0LrQuCDQvdCwINGB0LXRgNCy0LXRgNC1XG4gIGRlbGV0ZUNhcmQoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2RhdGEuX2lkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9nZXRKc29uT3JFcnJvcik7XG4gIH1cblxuICAvLyDQn9C+0YHRgtCw0L3QvtCy0LrQsCDQu9Cw0LnQutCwXG4gIHB1dExpa2VDYXJkKGRhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtkYXRhLl9pZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fZ2V0SnNvbk9yRXJyb3IpO1xuICB9XG5cbiAgLy8g0KHQvdGP0YLQuNC1INC70LDQudC60LBcbiAgZGVsZXRlTGlrZUNhcmQoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2RhdGEuX2lkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9nZXRKc29uT3JFcnJvcik7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBkYXRhLFxuICAgIGNhcmRTZWxlY3RvcixcbiAgICBvcGVuSW1hZ2UsXG4gICAgeyB1c2VySWQsIGhhbmRsZURlbGV0ZUNhcmQsIGhhbmRsZUxpa2VDYXJkLCBoYW5kbGVEaXNMaWtlQ2FyZCB9XG4gICkge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9pZCA9IHVzZXJJZDtcbiAgICB0aGlzLl9vd25lcklkID0gZGF0YS5vd25lci5faWQ7XG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9vcGVuSW1hZ2UgPSBvcGVuSW1hZ2U7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCA9IGhhbmRsZURlbGV0ZUNhcmQ7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNhcmQgPSBoYW5kbGVMaWtlQ2FyZDtcbiAgICB0aGlzLl9oYW5kbGVEaXNMaWtlQ2FyZCA9IGhhbmRsZURpc0xpa2VDYXJkO1xuICB9XG5cbiAgLy8g0LfQsNCx0LjRgNCw0LXQvCDRgNCw0LfQvNC10YLQutGDINC60LDRgNGC0L7Rh9C60Lgg0LjQtyBIVE1MLCDQutC70L7QvdC40YDRg9C10Lwg0Y3Qu9C10LzQtdC90YIg0Lgg0LLQvtC30LLRgNCw0YnQsNC10Lwg0Y3Qu9C10LzQtdC90YIg0LrQsNGA0YLQvtGH0LrQuFxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBjYXJkVGVtcGxhdGU7XG4gIH1cblxuICAvLyDQk9C+0YLQvtCy0LjQvCDQutCw0YDRgtC+0YfQutGDINC6INC/0YPQsdC70LjQutCw0YbQuNC4XG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9faW1hZ2VcIik7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2RlbGV0ZVwiKTtcbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2xpa2VcIik7XG4gICAgdGhpcy5fbGlrZUNvdW50ZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fbGlrZS1jb3VudGVyXCIpO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19jaXR5XCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICBpZiAodGhpcy5faWQgIT09IHRoaXMuX293bmVySWQpIHtcbiAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLl9pZCk7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLl9vd25lcklkKTtcbiAgICB9XG4gICAgdGhpcy5saWtlc0NvdW50ZXIodGhpcy5fbGlrZXMpO1xuICAgIHRoaXMuX2FjdGl2ZUxpa2UoKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG5cbiAgLy8g0YHQu9GD0YjQsNGC0LXQu9C4INGB0L7QsdGL0YLQuNC5XG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKSkge1xuICAgICAgICB0aGlzLl9oYW5kbGVEaXNMaWtlQ2FyZCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5faGFuZGxlTGlrZUNhcmQoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2ltYWdlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5fb3BlbkltYWdlKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xuICAgIH0pO1xuICB9XG5cbiAgLy8g0YPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4XG4gIGRlbGV0ZSgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICB9XG5cbiAgbGlrZSgpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKTtcbiAgfVxuXG4gIGRpc0xpa2UoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiZWxlbWVudF9fbGlrZV9hY3RpdmVcIik7XG4gIH1cblxuICBsaWtlc0NvdW50ZXIobGlrZXMpXG4gIHsgaWYgKGxpa2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9saWtlQ291bnRlci50ZXh0Q29udGVudCA9IGxpa2VzLmxlbmd0aDtcbiAgICB9XG4gIH1cblxuICBfYWN0aXZlTGlrZSgpIHtcbiAgICB0aGlzLl9saWtlcy5mb3JFYWNoKChsaWtlKSA9PiB7XG4gICAgICBpZiAodGhpcy5faWQgPT09IGxpa2UuX2lkKSB7XG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudF9fbGlrZV9hY3RpdmUnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKGZvcm1FbGVtZW50LCB2YWxpZGF0aW9uQ29uZmlnKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl92YWxpZGF0aW9uQ29uZmlnID0gdmFsaWRhdGlvbkNvbmZpZztcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl92YWxpZGF0aW9uQ29uZmlnLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHRoaXMuX3ZhbGlkYXRpb25Db25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3JcbiAgICApO1xuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQtNC70Y8g0L7RgtC+0LHRgNCw0LbQtdC90LjRjyDQvtGI0LjQsdC60Lgg0LLQstC+0LTQsFxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl92YWxpZGF0aW9uQ29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3ZhbGlkYXRpb25Db25maWcuZXJyb3JDbGFzcyk7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC00LvRjyDRgdC60YDRi9GC0LjRjyDQvtGI0LjQsdC60Lgg0LLQstC+0LTQsFxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxuICAgICk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fdmFsaWRhdGlvbkNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fdmFsaWRhdGlvbkNvbmZpZy5lcnJvckNsYXNzKTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0LTQu9GPINC/0YDQvtCy0LXRgNC60Lgg0LLQsNC70LjQtNC90L7RgdGC0Ywg0LLQstC+0LTQsFxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgLy8g0LTQvtCx0LDQstC70LXQvdC40LUg0L7QsdGA0LDQsdC+0YLRh9C40LrQvtCyINGB0L7QsdGL0YLQuNC5INC6INC/0L7Qu9GP0Lwg0YTQvtGA0LzRi1xuICBfdmFsaWRhdGVJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgLy8g0JXRgdC70Lgg0L/QvtC70LUg0L3QtSDQstCw0LvQuNC00L3Qviwg0LrQvtC70LHRjdC6INCy0LXRgNC90ZHRgiB0cnVlLCDQvtCx0YXQvtC0INC80LDRgdGB0LjQstCwINC/0YDQtdC60YDQsNGC0LjRgtGB0Y8g0Lgg0LzQtdGC0L7QtCB2YWxpZGF0ZUlucHV0INCy0LXRgNC90ZHRgiB0cnVlXG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0L/QtdGA0LXQutC70Y7Rh9C10L3QuNGPINGB0L7RgdGC0L7Rj9C90LjRjyDQutC90L7Qv9C60LhcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIC8vINCV0YHQu9C4INC10YHRgtGMINGF0L7RgtGPINCx0Ysg0L7QtNC40L0g0L3QtdCy0LDQu9C40LTQvdGL0Lkg0LjQvdC/0YPRglxuICAgIGlmICh0aGlzLl92YWxpZGF0ZUlucHV0KCkpIHtcbiAgICAgIC8vINGB0LTQtdC70LDQuSDQutC90L7Qv9C60YMg0L3QtdCw0LrRgtC40LLQvdC+0LlcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl92YWxpZGF0aW9uQ29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vINC40L3QsNGH0LUg0YHQtNC10LvQsNC5INC60L3QvtC/0LrRgyDQsNC60YLQuNCy0L3QvtC5XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fdmFsaWRhdGlvbkNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC/0YDQuNC90LjQvNCw0LXRgiDQv9Cw0YDQsNC80LXRgtGA0L7QvCDRjdC70LXQvNC10L3RgiDRhNC+0YDQvNGLINC4INC00L7QsdCw0LLQu9GP0LXRgiDQv9C+0LvRj9C8INC90YPQttC90YvQtSDQvtCx0YDQsNCx0L7RgtGH0LjQutC4XG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvLyAvLyDQn9GA0L7QstC10YDQutCwINGB0L7RgdGC0L7Rj9C90LjRjyDQutC90L7Qv9C60Lgg0LIg0YHQsNC80L7QvCDQvdCw0YfQsNC70LVcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIC8vINCy0YvQt9GL0LLQsNC10Lwg0LzQtdGC0L7QuyDQv9GA0L7QstC10YDQutC4INCy0LDQu9C40LTQvdC+0YHRgtC4INCy0LLQvtC00LAsINC/0LXRgNC10LTQsNCy0LDRjyDRhNC+0YDQvNGDINC4INC/0YDQvtCy0LXRgNGP0LXQvNGL0Lkg0Y3Qu9C10LzQtdC90YJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIC8vINCf0YDQvtCy0LXRgNC60LAg0YHQvtGB0YLQvtGP0L3QuNGPINC60L3QvtC/0LrQuCDQv9GA0Lgg0LjQt9C80LXQvdC10L3QuNC4INC70Y7QsdC+0LPQviDQuNC3INC/0L7Qu9C10LlcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQvtGH0LjRidCw0LXRgiDQvtGI0LjQsdC60Lgg0Lgg0LHQu9C+0LrQuNGA0YPQtdGCINC60L3QvtC/0LrRg1xuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcblxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0pXG4gIH1cblxuICBkaXNhYmxlZEJ1dHRvbigpIHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fdmFsaWRhdGlvbkNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGNvbnRhaW5lclNlbGVjdG9yO1xuICB9XG5cbiAgYWRkSXRlbShpdGVtKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSk7XG4gIH1cblxuICByZW5kZXJJdGVtcyhpdGVtcykge1xuICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBwb3B1cFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZShlKSB7XG4gICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+IHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX29wZW5lZFwiKSB8fFxuICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19idXR0b24tY2xvc2VcIilcbiAgICAgICAgKSB7XG4gICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fbmFtZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2NhcHRpb25cIik7XG4gICAgdGhpcy5fbGluayA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlLXNyY1wiKTtcbiAgfVxuXG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHRoaXMuX2xpbmsuc3JjID0gbGluaztcbiAgICB0aGlzLl9saW5rLmFsdCA9IG5hbWU7XG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgeyBzdWJtaXRGb3JtIH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9zdWJtaXRGb3JtID0gc3VibWl0Rm9ybTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgICB0aGlzLl9pbnB1dHMgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0XCIpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2J1dHRvblwiKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25Db250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IHt9O1xuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICB2YWx1ZXNbZWxlbWVudC5uYW1lXSA9IGVsZW1lbnQudmFsdWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfVxuXG4gIHNldElucHV0VmFsdWVzKGRhdGEpIHtcbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgaXRlbS52YWx1ZSA9IGRhdGFbaXRlbS5pZF07XG4gICAgICBjb25zb2xlLmxvZyhpdGVtKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9zdWJtaXRGb3JtKHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8g0JLQuNC30YPQsNC70LjQt9Cw0YbQuNGPINC40L3QtNC40LrQsNGC0L7RgNCwINGB0L7RhdGA0LDQvdC10L3QuNGPINGE0L7RgNC80YsgKFVYKVxuICByZW5kZXJMb2FkaW5nVmlldyhsb2FkaW5nLCB0ZXh0KSB7XG4gICAgaWYgKGxvYWRpbmcpIHtcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbkNvbnRlbnQ7XG4gICAgICB9LCAzMDAwKTtcbiAgICB9XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEFjY2VwdCBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgeyBzdWJtaXRGb3JtIH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgICB0aGlzLl9zdWJtaXRGb3JtID0gc3VibWl0Rm9ybTtcbiAgfVxuXG4gIG9wZW4oY2FyZCkge1xuICAgIHRoaXMuX2NhcmQgPSBjYXJkO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxuXG4gIHNldFN1Ym1pdEFjdGlvbih7IGhhbmRsZVN1Ym1pdEFjdGlvbiB9KSB7IFxuICAgIHRoaXMuc3VibWl0QWN0aW9uID0gaGFuZGxlU3VibWl0QWN0aW9uO1xuICB9IFxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9zdWJtaXRGb3JtKHRoaXMuX2NhcmQpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgXCIuLy4uL3BhZ2VzL2luZGV4LmNzc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEFjY2VwdCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhBY2NlcHQuanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHtcbiAgcG9wdXBVc2VyLFxuICBwb3B1cENhcmQsXG4gIHBvcHVwSW1hZ2UsXG4gIHBvcHVwQXZhdGFyLFxuICBwb3B1cEFjY2VwdCxcbiAgcHJvZmlsZUJ1dHRvbixcbiAg0YFhcmRCdXR0b24sXG4gIGF2YXRhckJ1dHRvbixcbiAgY2FyZExpc3RTZWxlY3RvcixcbiAgZm9ybUVsZW1lbnRVc2VyLFxuICBmb3JtRWxlbWVudENhcmQsXG4gIGZvcm1FbGVtZW50QXZhdGFyLFxuICB2YWxpZGF0aW9uQ29uZmlnLFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5cbmxldCB1c2VySWQ7XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDdcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiNTdmZTc1MzItYWRhZi00ZTAyLWI0MGYtMzBkYTFiY2U3OGNkXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcblxuY29uc3QgcHJvZmlsZUluZm8gPSBuZXcgVXNlckluZm8oe1xuICBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3VzZXItbmFtZVwiLFxuICBhYm91dFNlbGVjdG9yOiBcIi5wcm9maWxlX191c2VyLWFib3V0XCIsXG4gIGF2YXRhclNlbGVjdG9yOiBcIi5wcm9maWxlX19hdmF0YXItaW1nXCIsXG59KTtcblxuLy8g0KHQvtC30LTQsNC90LjQtSDRjdC60LfQtdC80L/Qu9GP0YDQsCDQutCw0YDRgtC+0YfQutC4XG5jb25zdCBjcmVhdGVDYXJkID0gKGRhdGEpID0+IHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsIFwiI2VsZW1lbnQtdGVtcGxhdGVcIiwgb3BlbkltYWdlLCB7XG4gICAgdXNlcklkOiB1c2VySWQsXG4gICAgaGFuZGxlRGVsZXRlQ2FyZDogKCkgPT4ge1xuICAgICAgYWNjZXB0UG9wdXAub3BlbihkYXRhKTtcbiAgICAgIGFjY2VwdFBvcHVwLnNldFN1Ym1pdEFjdGlvbih7XG4gICAgICAgIGhhbmRsZVN1Ym1pdEFjdGlvbjogKCkgPT4ge1xuICAgICAgICAgIGFwaVxuICAgICAgICAgICAgLmRlbGV0ZUNhcmQoZGF0YSlcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgYWNjZXB0UG9wdXAuY2xvc2UoKTtcbiAgICAgICAgICAgICAgY2FyZC5kZWxldGUoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGhhbmRsZUxpa2VDYXJkOiAoKSA9PiB7XG4gICAgICBhcGlcbiAgICAgICAgLnB1dExpa2VDYXJkKGRhdGEpXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjYXJkLmxpa2VzQ291bnRlcihyZXMubGlrZXMpO1xuICAgICAgICAgIGNhcmQubGlrZSgpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApO1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIGhhbmRsZURpc0xpa2VDYXJkOiAoKSA9PiB7XG4gICAgICBhcGlcbiAgICAgICAgLmRlbGV0ZUxpa2VDYXJkKGRhdGEpXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjYXJkLmxpa2VzQ291bnRlcihyZXMubGlrZXMpO1xuICAgICAgICAgIGNhcmQuZGlzTGlrZSgpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApO1xuICAgICAgICB9KTtcbiAgICB9LFxuICB9KTtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICByZXR1cm4gY2FyZEVsZW1lbnQ7XG59O1xuXG4vLyDQoNC10L3QtNC10YAg0LrQsNGA0YLQvtGH0LXQulxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjcmVhdGVDYXJkKGl0ZW0pO1xuICAgICAgY2FyZExpc3QuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gICAgfSxcbiAgfSxcbiAgY2FyZExpc3RTZWxlY3RvclxuKTtcblxuLy8g0J/QvtC/0LDQvyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvdC+0LLQvtCz0L4g0LzQtdGB0YLQsFxuY29uc3QgbmV3Q2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0ocG9wdXBDYXJkLCB7XG4gIHN1Ym1pdEZvcm06IGhhbmRsZXJDYXJkU3VibWl0LFxufSk7XG5cbi8vINCf0L7Qv9Cw0L8g0YEg0LrQsNGA0YLQuNC90LrQvtC5XG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwSW1hZ2UpO1xuY29uc3Qgb3BlbkltYWdlID0gKG5hbWUsIGxpbmspID0+IHtcbiAgaW1hZ2VQb3B1cC5vcGVuKG5hbWUsIGxpbmspO1xufTtcblxuLy8g0J/QvtC/0LDQvyDQv9C+0LTRgtCy0LXRgNC20LTQtdC90LjRjyDRg9C00LDQu9C10L3QuNGPINC80L7QtdC5INC60LDRgNGC0L7Rh9C60LhcbmNvbnN0IGFjY2VwdFBvcHVwID0gbmV3IFBvcHVwV2l0aEFjY2VwdChwb3B1cEFjY2VwdCwge1xuICBzdWJtaXRGb3JtOiAoKSA9PiBhY2NlcHRQb3B1cC5zdWJtaXRBY3Rpb24oKSxcbn0pO1xuXG4vLyDQn9C+0L/QsNC/INC40LfQvNC10L3QtdC90LjRjyDQv9GA0L7RhNC40LvRj1xuY29uc3QgcHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0ocG9wdXBVc2VyLCB7XG4gIHN1Ym1pdEZvcm06IGhhbmRsZXJQcm9maWxlU3VibWl0LFxufSk7XG5cbi8vINCf0L7Qv9Cw0L8g0LjQt9C80LXQvdC10L3QuNGPINCw0LLQsNGC0LDRgNCwXG5jb25zdCBhdmF0YXJQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHBvcHVwQXZhdGFyLCB7XG4gIHN1Ym1pdEZvcm06IGhhbmRsZXJBdmF0YXJTdWJtaXQsXG59KTtcblxuLy8g0J7RgtC/0YDQsNCy0LrQsCDQtNCw0L3QvdGL0YUg0YTQvtGA0LzRiyDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC+0YTQuNC70Y9cbmZ1bmN0aW9uIGhhbmRsZXJQcm9maWxlU3VibWl0KGRhdGEpIHtcbiAgcHJvZmlsZVBvcHVwLnJlbmRlckxvYWRpbmdWaWV3KHRydWUsIFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIik7XG4gIGFwaVxuICAgIC5jaGFuZ2VQcm9maWxlKGRhdGEpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgcHJvZmlsZUluZm8uc2V0VXNlckluZm8ocmVzKTtcbiAgICAgIHByb2ZpbGVQb3B1cC5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgcHJvZmlsZVBvcHVwLnJlbmRlckxvYWRpbmdWaWV3KGZhbHNlKTtcbiAgICB9KTtcbn1cblxuLy8g0J7RgtC/0YDQsNCy0LrQsCDQtNCw0L3QvdGL0YUg0YTQvtGA0LzRiyDQuNC30LzQtdC90LXQvdC40Y8g0LDQstCw0YLQsNGA0LBcbmZ1bmN0aW9uIGhhbmRsZXJBdmF0YXJTdWJtaXQoZGF0YSkge1xuICBhdmF0YXJQb3B1cC5yZW5kZXJMb2FkaW5nVmlldyh0cnVlLCBcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCIpO1xuICBhcGlcbiAgICAuY2hhbmdlQXZhdGFyKGRhdGEpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgcHJvZmlsZUluZm8uc2V0VXNlckluZm8ocmVzKTtcbiAgICAgIGF2YXRhclBvcHVwLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBhdmF0YXJQb3B1cC5yZW5kZXJMb2FkaW5nVmlldyhmYWxzZSk7XG4gICAgfSk7XG59XG5cbi8vINCe0YLQv9GA0LDQstC60LAg0LTQsNC90L3Ri9GFINGE0L7RgNC80Ysg0LTQvtCx0LDQstC70LXQvdC40Y8g0L3QvtCy0L7Qs9C+INC80LXRgdGC0LBcbmZ1bmN0aW9uIGhhbmRsZXJDYXJkU3VibWl0KGRhdGEpIHtcbiAgbmV3Q2FyZFBvcHVwLnJlbmRlckxvYWRpbmdWaWV3KHRydWUsIFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIik7XG4gIGFwaVxuICAgIC5hZGRDYXJkKGRhdGEpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgY2FyZExpc3QuYWRkSXRlbShjcmVhdGVDYXJkKHJlcykpO1xuICAgICAgbmV3Q2FyZFBvcHVwLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBuZXdDYXJkUG9wdXAucmVuZGVyTG9hZGluZ1ZpZXcoZmFsc2UpO1xuICAgIH0pO1xufVxuXG4vLyDQn9C+0LvRg9GH0LXQvdC40LUg0LTQsNC90L3Ri9GFINGB0LXRgNCy0LXRgNCwINC/0YDQuCDQt9Cw0LPRgNGD0LfQutC1INGB0YLRgNCw0L3QuNGG0YtcblByb21pc2UuYWxsKFthcGkuZ2V0VXNlckluZm8oKSwgYXBpLmdldEluaXRpYWxDYXJkcygpXSlcbiAgLnRoZW4oKFtkYXRhLCBjYXJkc10pID0+IHtcbiAgICB1c2VySWQgPSBkYXRhLl9pZDtcbiAgICBwcm9maWxlSW5mby5zZXRVc2VySW5mbyhkYXRhKTtcbiAgICBjYXJkTGlzdC5yZW5kZXJJdGVtcyhjYXJkcy5yZXZlcnNlKCkpO1xuICAgIGNvbnNvbGUubG9nKHVzZXJJZCk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcblxuLy8g0J7QsdGA0LDQsdC+0YLRh9C40LrQuCDRgdC+0LHRi9GC0LjQuVxuXG4vLyDQntGC0LrRgNGL0YLQuNC1INC/0L7Qv9Cw0L/QsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvdC+0LLQvtCz0L4g0LzQtdGB0YLQsFxu0YFhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgbmV3Q2FyZFBvcHVwLm9wZW4oKTtcbiAgYWRkRm9ybVZhbGlkYXRpb24ucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcblxuLy8g0J7RgtC60YDRi9GC0LjQtSDQv9C+0L/QsNC/0LAg0LjQt9C80LXQvdC10L3QuNGPINCw0LLQsNGC0LDRgNCwXG5hdmF0YXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgYXZhdGFyUG9wdXAub3BlbigpO1xuICBhdmF0YXJGb3JtVmFsaWRhdGlvbi5yZXNldFZhbGlkYXRpb24oKTtcbn0pO1xuXG4vLyDQntGC0LrRgNGL0YLQuNC1INC/0L7Qv9Cw0L/QsCDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC+0YTQuNC70Y9cbnByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY29uc3QgaW5mbyA9IHByb2ZpbGVJbmZvLmdldFVzZXJJbmZvKCk7XG4gIHByb2ZpbGVQb3B1cC5zZXRJbnB1dFZhbHVlcyhpbmZvKTtcbiAgcHJvZmlsZVBvcHVwLm9wZW4oKTtcbiAgdXNlckZvcm1WYWxpZGF0aW9uLnJlc2V0VmFsaWRhdGlvbigpO1xuICB1c2VyRm9ybVZhbGlkYXRpb24uZGlzYWJsZWRCdXR0b24oKTtcbn0pO1xuXG4vLyDQktCw0LvQuNC00LDRhtC40Y8g0YTQvtGA0LxcbmNvbnN0IHVzZXJGb3JtVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FbGVtZW50VXNlciwgdmFsaWRhdGlvbkNvbmZpZyk7XG5jb25zdCBhZGRGb3JtVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FbGVtZW50Q2FyZCwgdmFsaWRhdGlvbkNvbmZpZyk7XG5jb25zdCBhdmF0YXJGb3JtVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICBmb3JtRWxlbWVudEF2YXRhcixcbiAgdmFsaWRhdGlvbkNvbmZpZ1xuKTtcbnVzZXJGb3JtVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XG5hZGRGb3JtVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XG5hdmF0YXJGb3JtVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbi8vINCj0YHRgtCw0L3QvtCy0LrQsCDRgdC70YPRiNCw0YLQtdC70LXQuVxubmV3Q2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5pbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5hY2NlcHRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuYXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGF0YS5uYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX2Fib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkYXRhLmFib3V0U2VsZWN0b3IpO1xuICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGF0YS5hdmF0YXJTZWxlY3Rvcik7XG4gIH1cblxuICAvLyDQn9C+0LvRg9GH0LXQvdC40LUg0LjQvdGE0L7RgNC80LDRhtC40Lgg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LnRleHRDb250ZW50LFxuICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXIuc3JjLFxuICAgIH07XG4gIH1cblxuICAvLyDQmNC30LzQtdC90LXQvdC40LUg0LjQvdGE0L7RgNC80LDRhtC40Lgg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcbiAgICBpZiAoKGRhdGEubmFtZSwgZGF0YS5hYm91dCwgZGF0YS5hdmF0YXIpKSB7XG4gICAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xuICAgICAgdGhpcy5fYXZhdGFyLnNyYyA9IGRhdGEuYXZhdGFyO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IHBvcHVwcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBcIik7XG5leHBvcnQgY29uc3QgcG9wdXBVc2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9wcm9maWxlXCIpO1xuZXhwb3J0IGNvbnN0IHBvcHVwQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfbmV3LWNhcmRcIik7XG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfaW1hZ2VcIik7XG5leHBvcnQgY29uc3QgcG9wdXBBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX2F2YXRhclwiKTtcbmV4cG9ydCBjb25zdCBwb3B1cEFjY2VwdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfYWNjZXB0XCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2J1dHRvbi1lZGl0XCIpO1xuZXhwb3J0IGNvbnN0INGBYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19idXR0b24tZWRkXCIpO1xuZXhwb3J0IGNvbnN0IGF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xuZXhwb3J0IGNvbnN0IGNhcmRMaXN0U2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzXCIpO1xuZXhwb3J0IGNvbnN0IGZvcm1FbGVtZW50VXNlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG5leHBvcnQgY29uc3QgZm9ybUVsZW1lbnRDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybV9uZXctY2FyZFwiKTtcbmV4cG9ydCBjb25zdCBmb3JtRWxlbWVudEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1fYXZhdGFyXCIpO1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvci12aXNpYmxlXCIsXG59OyJdLCJuYW1lcyI6WyJBcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsInRoaXMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwidGhlbiIsIl9nZXRKc29uT3JFcnJvciIsImRhdGEiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJsaW5rIiwiYWJvdXQiLCJhdmF0YXIiLCJfaWQiLCJDYXJkIiwiY2FyZFNlbGVjdG9yIiwib3BlbkltYWdlIiwidXNlcklkIiwiaGFuZGxlRGVsZXRlQ2FyZCIsImhhbmRsZUxpa2VDYXJkIiwiaGFuZGxlRGlzTGlrZUNhcmQiLCJfbmFtZSIsIl9saW5rIiwiX293bmVySWQiLCJvd25lciIsIl9saWtlcyIsImxpa2VzIiwiX2NhcmRTZWxlY3RvciIsIl9vcGVuSW1hZ2UiLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9oYW5kbGVMaWtlQ2FyZCIsIl9oYW5kbGVEaXNMaWtlQ2FyZCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9pbWFnZUVsZW1lbnQiLCJfZGVsZXRlQnV0dG9uIiwiX2xpa2VCdXR0b24iLCJfbGlrZUNvdW50ZXIiLCJ0ZXh0Q29udGVudCIsInNyYyIsImFsdCIsInN0eWxlIiwiZGlzcGxheSIsImNvbnNvbGUiLCJsb2ciLCJsaWtlc0NvdW50ZXIiLCJfYWN0aXZlTGlrZSIsIl9zZXRFdmVudExpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInJlbW92ZSIsImFkZCIsImxlbmd0aCIsImZvckVhY2giLCJsaWtlIiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbGVtZW50IiwidmFsaWRhdGlvbkNvbmZpZyIsIl9mb3JtRWxlbWVudCIsIl92YWxpZGF0aW9uQ29uZmlnIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX2J1dHRvbkVsZW1lbnQiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInNvbWUiLCJfdmFsaWRhdGVJbnB1dCIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJkaXNhYmxlZCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtIiwicHJlcGVuZCIsIml0ZW1zIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJlIiwia2V5IiwiY2xvc2UiLCJ0YXJnZXQiLCJQb3B1cFdpdGhJbWFnZSIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRGb3JtIiwiX3N1Ym1pdEZvcm0iLCJfZm9ybSIsIl9pbnB1dHMiLCJfc3VibWl0QnV0dG9uIiwiX3N1Ym1pdEJ1dHRvbkNvbnRlbnQiLCJ2YWx1ZXMiLCJlbGVtZW50IiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsImxvYWRpbmciLCJ0ZXh0Iiwic2V0VGltZW91dCIsInJlc2V0IiwiUG9wdXBXaXRoQWNjZXB0IiwiY2FyZCIsIl9jYXJkIiwiaGFuZGxlU3VibWl0QWN0aW9uIiwic3VibWl0QWN0aW9uIiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJfYWJvdXQiLCJhYm91dFNlbGVjdG9yIiwiX2F2YXRhciIsImF2YXRhclNlbGVjdG9yIiwicG9wdXBVc2VyIiwicG9wdXBDYXJkIiwicG9wdXBJbWFnZSIsInBvcHVwQXZhdGFyIiwicG9wdXBBY2NlcHQiLCJwcm9maWxlQnV0dG9uIiwi0YFhcmRCdXR0b24iLCJhdmF0YXJCdXR0b24iLCJjYXJkTGlzdFNlbGVjdG9yIiwiZm9ybUVsZW1lbnRVc2VyIiwiZm9ybUVsZW1lbnRDYXJkIiwiZm9ybUVsZW1lbnRBdmF0YXIiLCJmb3JtU2VsZWN0b3IiLCJhcGkiLCJhdXRob3JpemF0aW9uIiwicHJvZmlsZUluZm8iLCJjcmVhdGVDYXJkIiwiYWNjZXB0UG9wdXAiLCJvcGVuIiwic2V0U3VibWl0QWN0aW9uIiwiZGVsZXRlQ2FyZCIsImRlbGV0ZSIsImNhdGNoIiwiZXJyIiwicHV0TGlrZUNhcmQiLCJkZWxldGVMaWtlQ2FyZCIsImRpc0xpa2UiLCJnZW5lcmF0ZUNhcmQiLCJjYXJkTGlzdCIsImNhcmRFbGVtZW50IiwiYWRkSXRlbSIsIm5ld0NhcmRQb3B1cCIsInJlbmRlckxvYWRpbmdWaWV3IiwiYWRkQ2FyZCIsImZpbmFsbHkiLCJpbWFnZVBvcHVwIiwicHJvZmlsZVBvcHVwIiwiY2hhbmdlUHJvZmlsZSIsInNldFVzZXJJbmZvIiwiYXZhdGFyUG9wdXAiLCJjaGFuZ2VBdmF0YXIiLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsImNhcmRzIiwicmVuZGVySXRlbXMiLCJyZXZlcnNlIiwiYWRkRm9ybVZhbGlkYXRpb24iLCJyZXNldFZhbGlkYXRpb24iLCJhdmF0YXJGb3JtVmFsaWRhdGlvbiIsImluZm8iLCJzZXRJbnB1dFZhbHVlcyIsInVzZXJGb3JtVmFsaWRhdGlvbiIsImRpc2FibGVkQnV0dG9uIiwiZW5hYmxlVmFsaWRhdGlvbiIsInNldEV2ZW50TGlzdGVuZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==